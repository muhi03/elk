import{_ as u}from"./CCNd1XuL.js";import{_ as d}from"./BYeVC6Pm.js";import{r as _}from"./BHjwvw4e.js";import{d as f,l as y,j as $,c as g,w as h,a as T,n as b,e as v,o as w,f as n,h as a,cV as x,bz as A}from"./vIUoIwJY.js";import"./C-tXmAAi.js";import"./DdLPqneJ.js";import"./v1qJ5AFC.js";import"./Dxdd2Bvb.js";import"./CziPTEgh.js";import"./CrVpdqfN.js";import"./CjFal9cD.js";import"./CGaFhSG6.js";import"./COmINJJB.js";import"./BaQPXKY5.js";const G=f({__name:"media",async setup(B){let t,o;const{t:r}=y(),c=$().params,i=g(()=>c.account),e=([t,o]=h(()=>x(i.value)),t=await t,o(),t),m=T().v1.accounts.$select(e.id).statuses.list({onlyMedia:!0,excludeReplies:!1});return e&&b({title:()=>`${r("tab.media")} | ${A(e)} (@${e.acct})`}),(s,C)=>{const p=u,l=d;return w(),v("div",null,[n(p),n(l,{paginator:a(m),preprocess:"reorderedTimeline"in s?s.reorderedTimeline:a(_),context:"account",account:a(e)},null,8,["paginator","preprocess","account"])])}}});export{G as default};
